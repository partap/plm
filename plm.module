<?php
// $Id$
/*
 * Poker League Manager: A Drupal module to manage our poker league
 * Todo:
 * - Fix current payout structure, add editor for payouts
 * - Menu for navigating within module
 *   - Main Page
 *     - Recent News (results, announcements)
 *   - Blocks
 *     - Leaderboard, Last Results, Next Game
 *   - Players
 *     - list all, browse 
 *   - Results (browse past games, other seasons)
 *     - games listed under plm/events/%event because we don't want to need
 *       the sid AND the eid.  Once we load the event, 
 *       we have sid and so we can either rewrite breadcrumbs,
 *       or use a custom seasons browsing menu or selector...investigate ?destination=xxx...
 *   - Schedule (upcoming games)
 *   - Current Rankings

 * - Handle final table  - Accumulate rakes?
 * - Publish game results when done (custom node type?)
 *   - send email to list
 *   - Allow comments, messages to admin
 * - Permissions
 *   -XXX Hide money stats from non-verified users
 *   - Tie user accounts to player ids
 *   - require password for deleting seasons/players (popup?)
 * - Theming (make it purty)
 * - pulldown select/autocomplete for player names
 * - popups for creating referenced recs on the fly.  
 *     eg. import data or new game (create season), 
 *         results (create player)
 *
 */


require_once drupal_get_path('module', 'plm') .'/plm.inc';
require_once drupal_get_path('module', 'plm') .'/plm_db.inc';
require_once drupal_get_path('module', 'plm') .'/plm_file.inc';
require_once drupal_get_path('module', 'plm') .'/plm_tablesort.inc';

function plm_menu() {
  $items = array();

  $items['plm'] = array(
    'title' => 'Poker League (PLM)',
    'page callback' => 'plm_main',
    'access arguments' => array('access poker league content'),
    'description' => t('Poker League'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => -100,
  );
  $items['plm/seasons'] = array(
    'title' => t('Seasons'),
    'description' => 'Browse All Seasons',
    'page callback' => 'plm_seasons_list',
    'page arguments' => array(NULL),
    'access arguments' => array('access poker league content'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 2,
    'menu_name' => 'plm',
  );
  $items['plm/seasons/list'] = array(
    'title'  => t('List Seasons'),
    'weight' => -1,
    'type'   => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['plm/seasons/new'] = array(
    'title' => t('New Season'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('plm_season_form', 'new'),
    'access arguments' => array('administer poker league'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'plm_admin.inc',
    'weight' => 0,
  ); 

  $items['plm/seasons/%plm_season'] = array(
    'title' => t('View Season'),
    'title callback' => 'plm_season_title', 
    'title arguments' => array(2), 
    'description' => 'View a poker season',
    'page callback' => 'plm_season_view',
    'page arguments' => array(2),
    'access arguments' => array('access poker league content'),
    //'type' => MENU_NORMAL_ITEM,
    //'type' => MENU_LOCAL_TASK,
    //'type' => MENU_CALLBACK,
  );
  $items['plm/seasons/%plm_season/view'] = array(
    'title'  => t('Schedule'),
    'weight' => -1,
    'type'   => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['plm/seasons/%plm_season/edit'] = array(
    'title' => t('Edit'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('plm_season_form', 2),
    'access arguments' => array('administer poker league'),
    //'type' => MENU_NORMAL_ITEM,
    'type' => MENU_LOCAL_TASK,
    'file' => 'plm_admin.inc',
  ); 
  $items['plm/seasons/%plm_season/delete'] = array(
    'title' => t('Delete'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('plm_season_confirm_delete', 2),
    'access arguments' => array('administer poker league'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'plm_admin.inc',
  ); 
  $items['plm/seasons/%plm_season/rankings'] = array(
    'title' => t('Rankings'),
    'description' => 'View the current rankings for this season.',
    'page callback' => 'plm_rankings',
    'page arguments' => array(2),
    'access arguments' => array('access poker league content'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['plm/seasons/%plm_season/newevent'] = array(
    'title' => 'New Event',
    'description' => 'Set up a new event',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('plm_event_form',  NULL, 2),
    'access arguments' => array('administer poker league'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'plm_admin.inc',
  );
  $items['plm/events/%plm_event'] = array(
    'title' => t('Event'),
    'description' => 'View the details of a poker event',
    'page callback' => 'plm_event_view',
    'page arguments' => array(2),
    'access arguments' => array('access poker league content'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['plm/events/%plm_event/view'] = array(
    'title'  => t('View'),
    'weight' => -1,
    'type'   => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['plm/events/%plm_event/edit'] = array(
    'title' => t('Edit'),
    'description' => 'Edit the details of a poker event',
    'page callback' => 'plm_event_form',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('plm_event_form', 2),
    'access arguments' => array('administer poker league'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'plm_admin.inc',
  );
  $items['plm/players'] = array(
    'title' => t('Players'),
    'description' => 'View Players',
    'page callback' => 'plm_players_list',
    'access arguments' => array('access poker league content'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 1,
    'menu_name' => 'plm',
  );
  $items['plm/players/list'] = array(
    'title'  => t('List'),
    'weight' => -1,
    'type'   => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['plm/players/new'] = array(
    'title' => t('Add Player'),
    'description' => 'Add a New Player',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('plm_player_form'),
    'access arguments' => array('administer poker league'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'plm_admin.inc',
  );
  $items['plm/players/pid/%plm_player'] = array(
    'title' => t('Player'),
    'description' => 'Show player details',
    'page callback' => 'plm_player_view',
    'page arguments' => array(3),
    'access arguments' => array('access poker league content'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['plm/players/pid/%plm_player/view'] = array(
    'title'  => t('View'),
    'weight' => -1,
    'type'   => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['plm/players/pid/%plm_player/edit'] = array(
    'title' => t('Edit'),
    'description' => 'Edit player details',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('plm_player_form', 3),
    'access arguments' => array('administer poker league'),
    'type' => MENU_LOCAL_TASK,
//    'type' => MENU_CALLBACK,
    'file' => 'plm_admin.inc',
  );
  $items['plm/players/pid/%plm_player/delete'] = array(
    'title' => t('Delete'),
    'description' => 'Delete player from the roster',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('plm_player_confirm_delete', 3),
    'access arguments' => array('administer poker league'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'plm_admin.inc',
  );
  $items['plm/results/%plm_result/%/edit'] = array(
    'title' => t('Edit'),
    'description' => 'Edit result',
    'load arguments' => array(3),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('plm_result_form', 2),
    'access arguments' => array('administer poker league'),
    'file' => 'plm_admin.inc',
    'type' => MENU_CALLBACK,
  );
  $items['plm/results/%plm_result/%/delete'] = array(
    'title' => t('Delete Result'),
    'description' => 'Delete result from the league record',
    'load arguments' => array(3),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('plm_result_confirm_delete', 2),
   'access arguments' => array('administer poker league'),
    'type' => MENU_CALLBACK,
    'file' => 'plm_admin.inc',
  );
  $items['plm/rankings'] = array(
    'title' => t('Rankings'),
    'description' => 'View the current rankings for this season.',
    'page callback' => 'plm_rankings',
    'access arguments' => array('access poker league content'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 3,
    'menu_name' => 'plm',
  );
  $items['plm/schedule'] = array(
    'title' => t('Schedule'),
    'description' => 'Browse Schedule/Results for Current Season',
    'page callback' => 'plm_season_view',
    'access arguments' => array('access poker league content'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 0,
    'menu_name' => 'plm',
  );
  $items['plm/ajax'] = array(
    'title' => 'Ajax Popup response URL',
    'page callback' => 'plm_ajax',
    'access arguments' => array('access poker league content'),
    'type' => 'MENU_CALLBACK',
  );
  // Admin Menu Items
  
  $items['admin/plm'] = array(
    'title' => 'Poker League (PLM)',
    'description' => 'Set up and run a poker league',
    'page callback' => 'plm_admin',
    'access arguments' => array('administer poker league'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => -11,
    'file' => 'plm_admin.inc',
  );  
  $items['admin/plm/settings'] = array(
    'title' => 'Settings',
    'description' => 'General settings for poker league',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('plm_settings'),
    'access arguments' => array('administer poker league'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'plm_admin.inc',
  );
  $items['admin/plm/import'] = array(
    'title' => t('Import Results'),
    'description' => 'Import results from spreadsheet',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('plm_import_form'),
    'access arguments' => array('administer poker league'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'plm_file.inc',
  );

  return $items;
  
}

function plm_enable() {

}

function plm_disable() {

}

function plm_menu_alter(){

}

function plm_perm() {
  return array(
    'access poker league content', 
    'access poker league member content' , 
    'administer poker league');
}

// implementation of hook_access()
function plm_access($op, $node, $account) {
  if ($op == 'create' || $op == 'update' || $op == 'delete') {
    return user_access('administer poker league', $account);
  }
  if ($op == 'view') {
    if (user_access('access poker league content', $account) )
      return TRUE;
  }
  return FALSE;
}

function plm_event_access($op, $node, $account) {
  if ($op == 'create' || $op == 'update' || $op == 'delete') {
    return user_access('administer poker league', $account);
  }
  if ($op == 'view') {
    if (user_access('access poker league content', $account) )
      return TRUE;
  }
  return FALSE;
}

function plm_main() {
  //$content .= "<p>Poker League Manager Main Page</p>";
  $items = plm_menu();
  $content .= '<dl class="admin-list">';
  foreach ( $items as $path => $menu ) {
    $t = explode('/', $path);
    if ( count($t) == 2 ) {
      if (($t[0] == 'plm' ) 
          && $menu['type'] == MENU_NORMAL_ITEM) {
        $content .= '<dt>'. l($menu['title'], $path) .'</dt>';
        if ( isset($menu['description']) ) {
          $content .= '<dd>'. $menu['description'] .'</dd>';
        }
      }
    }
  }
  $content .= "</dl>";
  print theme('page', $content);

}

function plm_rankings($plm_season=NULL) {
  if (!isset($plm_season)){
    $sid=variable_get('plm_current_season', 0);
    $plm_season = _get_plm_season($sid);
  }
  if (!isset($plm_season)){
    $output = '<p>No Season Selected<p>';
    return $output;
  }  
  drupal_set_title("$plm_season->title Rankings");
  
  $header = array(
    array('data' => t('Rank')),
    array('data' => t('Name')),
    array('data' => t('Points')),
    array('data' => t('Places')),
  );
  if (user_access('access poker league member content')) {
    $header[] = array('data' => t('Winnings'));
  }
  $sid = $plm_season->sid;
  $players = _get_plm_rankings($sid);
  if (!$players) {
    $output .= '<p>No Results Found</p>';
    return $output;
  }
  $rank = 1;
  foreach ($players as $rec) {
    $rowdata = array(
      $rank,      
      l(t($rec->name), 'plm/players/pid/' . $rec->pid),
      $rec->points,
      $rec->places ? $rec->places : '',
    );
    if (user_access('access poker league member content')) {
      $rowdata[] = $rec->cash ? '$' . $rec->cash : '';
    }
    $rank++;
    $rows[] = $rowdata;
  }
  //$caption = $plm_season->title;
  return $output . _theme_plm_table($header, $rows, $attr, $caption);
  //print theme('page', $content);
}

function plm_season_title($plm_season) { 
  //drupal_set_message("plm_season_title(" . print_r($plm_season, TRUE) . ")");
  return $plm_season->title; 
} 

function plm_player_load($pid) {
  return _get_plm_player($pid);
}

function plm_players_list() {
  $output = '';
  drupal_set_title("Poker Players");

  $num_players = _get_num_plm_players();
  $output .= format_plural($num_players, '1 Player', '@count Players');

  // override theme table's parameters 
  // so points, places and winnings sort in descending order
  if (isset($_GET['order'])){
    if ($_GET['order'] == 'Wins')     $_GET['sort'] = 'desc';
    if ($_GET['order'] == 'Places')   $_GET['sort'] = 'desc';
    if ($_GET['order'] == 'Points')   $_GET['sort'] = 'desc';
    if ($_GET['order'] == 'Winnings') $_GET['sort'] = 'desc';
  }
  // make default sort column active
  // default sorted by winnings if logged in
  else if (user_access('access poker league member content')) {
    $_GET['order'] = 'Winnings';
    $_GET['sort'] = 'desc';
  }
  // default sort by points otherwise
  else {
    $_GET['order'] = 'Points';
    $_GET['sort'] = 'desc';
  }
  $header = array(
    array('data' => t('Name'),     'field' => 'name', 'sort' => 'asc' ),
    array('data' => t('Wins'),     'field' => 'wins'),
    array('data' => t('Places'),   'field' => 'places'),
    array('data' => t('Points'),   'field' => 'points'),
  );

  // Hide cash stats!
  if (user_access('access poker league member content')) {
    $header[] = array('data' => t('Winnings'), 'field' => 'cash' );
  }
  if (user_access('administer poker league')) {
    $header[] = array('data' => t(''), 'colspan' => 2);
  }
  $players = _get_plm_players(plm_tablesort_sql($header));

  foreach ($players as $rec) {
    $rowdata = array(
      //l('"'. $rec->name . '"', 'plm/players/pid/' . $rec->pid),
      l($rec->name, 'plm/players/pid/' . $rec->pid),
      $rec->wins,
      $rec->places ? $rec->places : '0',
      $rec->points,
    );
  // Hide cash stats!
    if (user_access('access poker league member content')) {
      $rowdata[] = $rec->cash ? '$' . $rec->cash : '';    }
    if (user_access('administer poker league')) {
      $rowdata[] = l(t('edit'), 'plm/players/pid/' . $rec->pid . '/edit');
      $rowdata[] = l(t('delete'), 'plm/players/pid/' . $rec->pid . '/delete');
    }
    $rows[] = $rowdata;
  }

  return $output . theme('table', $header, $rows);
  //return $output . _theme_plm_table($header, $rows);
}

function plm_player_view($player) {
  drupal_set_title('Player Profile: ' . $player->name);
  //$output = "<p>Details of $player->name go here</p>\n";
  $output .= theme_plm_player_details($player);
  return $output;
}
function theme_plm_player_details($player) {

  $header = array(
    "Season",
    "Event",
    "Host",
    "Place", 
    "Points",
  );
  // Hide cash stats!
  if (user_access('access poker league member content')) {
    $header[] = "Winnings";
  }
  
  $places = _get_plm_results_by_player($player->pid);
  if (!isset($places)) return '<p>No places on record.</p>';
  $sid    = NULL;
  $s_points   = array();
  $s_cash     = array();
  $tot_points = 0;
  $tot_cash   = 0;

  foreach ($places as $r) {
    // Season Totals
    if ($sid != $r->sid){
      $s = plm_season_load($r->sid);
    }
    if ($sid && $sid != $r->sid){
      $rowdata = array(
        array('data' => t("$s->title Total"), 'colspan' => 4, 'header' => 1),
        array('data' => $s_points[$sid]), 
      );

      // Hide cash stats!
      if (user_access('access poker league member content')) {
        $rowdata[] =  array('data' => '$' . $s_cash[$sid]);
      }

      $rows[] = array(
        'class' => 'subtot',
        'data' => $rowdata,
      );
      $tot_points += $s_points[$sid];
      $tot_cash   += $s_cash[$sid];
    }
    
    $rowdata = array(
      $s->title,
      //$r->sid,
      l($r->title, "plm/events/$r->eid"), 
      $r->host,
      _plm_format_place($r->place),
      $r->points,
    );
    // Hide cash stats!
    if (user_access('access poker league member content')) {
      $rowdata[] =  '$' . $r->cash;
    }
    $rows[] = $rowdata;
    
    $sid       = $r->sid;
    $s_points[$sid] += $r->points;
    $s_cash[$sid]   += $r->cash;
  }
  // Last Season Total
  if ($sid){
    $rowdata = array(
      array('data' => t("$s->title Total"), 'colspan' => 4, 'header' => 1),
      array('data' => $s_points[$sid]), 
    );
    
    // Hide cash stats!
    if (user_access('access poker league member content')) {
      $rowdata[] =  array('data' => '$' . $s_cash[$sid]);
    }
    
    $rows[] = array(
      'class' => 'subtot',
      'data' => $rowdata,
    );
    $tot_points += $s_points[$sid];
    $tot_cash   += $s_cash[$sid];
  }
  // Grand Total
  $rowdata = array(
    array('data' => t("Grand Total"), 'colspan' => 4, 'header' => 1),
    array('data' => $tot_points),
  );
  if (user_access('access poker league member content')) {
    $rowdata[] = array('data' => '$' . $tot_cash);
  }
  
  $rows[] = array(
    'class' => 'subtot last',
    'data' => $rowdata,
  );
  
  
  $output .= theme('table', $header, $rows);
  return $output;
}
function plm_season_load($sid) {
  return _get_plm_season($sid);
}
//function plm_season_to_arg($s) {
//  return $s->sid;
//}

function plm_seasons_list() {
  //$output .= '<h5>plm_seasons_list()</h5>';
  drupal_set_title("Poker Seasons");
/*   $item = menu_get_item(); */
/*   foreach($item as $x => $y){ */
/*     print_r('<b>'); */
/*     print_r($x); */
/*     print_r('</b> =&gt; '); */
/*     print_r($y); */
/*     print_r('<br>'); */
/*   } */
  
  $seasons = _get_plm_seasons();
  if (!isset($seasons)){
    $output = "<p>There are no seasons configured</p>";
    return $output;
  }
  $list = array();
  $fmt = 'D, M j Y';
  foreach ($seasons as $s) {
    $datestr = format_date($s->start_date, 'custom', $fmt);
    if ($s->end_date) $datestr .= " to " . format_date($s->end_date, 'custom', $fmt);
    else $datestr = 'Started ' . $datestr;
    //$output .= "<p>item($s->title, $datestr)</p>";
    $list[] = l(t("$s->title"), 
                "plm/seasons/$s->sid") . "<div>$datestr</div>";
  }
  $output .= theme('item_list', $list);
  return $output;
}

function theme_plm_season($season, $teaser=NULL) {
  //$output .= t("<p>theme_plm_season()</p>");
  $output .= theme_plm_date_range($season, $teaser);
  $label = 'Events';
  $num_events = _get_num_plm_events($season->sid);
  $output .= "<div class=\"plm_event_list\">";
  $output .= "<div class=\"num_events\">$label: $num_events</div>";
  if ($num_events == 0 || $teaser) return $output . '</div>';
  $output .= theme_plm_event_list($season, $teaser);
  return $output;
}

function theme_plm_date_range($season, $teaser) {
  //$output = '<p>"theme_plm_date_range"</p>';
  $label = 'Starts';
  $now = gmmktime();
  if ($season->start_date < $now) $label = 'Started';
  $fmt = 'M j Y';
  $datestr = date($fmt, $season->start_date);
  $output .= t(
    '<div>@label: @datestr</div>', array(
      '@label' => $label, 
      '@datestr' => $datestr,
    )
  );
  if ($season->end_date == 0) return $output;
  
  $label = 'Ends';
  if ($season->end_date < $now) $label = 'Ended';
  $datestr = date($fmt, $season->end_date);
  $output .= t(
    '<div>@label: @datestr</div>',
    array(
      '@label' => $label, 
      '@datestr' => $datestr));
  return $output;// . "</div>";
}

function theme_plm_event_list($season, $teaser) {
  //$output = '<p>"theme_plm_event_list"</p>';

  $header = array('Event', 'Date', 'Host', 'Entrants', 'Winner', '');
  if (user_access('administer poker league')) {
    $header[] = '';
  }
  
  $events = _get_plm_events($season->sid);
  
  foreach ($events as $event) {
    
    //$date_str = date("m-d-Y", $event->event_date);
    //$date_str = date("n/j/Y", $event->event_date);
    //$date_str = date("D, M j Y g:iA", $event->event_date);
    $date_str = date("D, M j Y", $event->event_date);
    $rowdata = array(
      l($event->title, "plm/events/$event->eid"),
      $date_str,
      $event->host,
      $event->num_players ? $event->num_players : '',
      $event->wid ? l($event->winner, "plm/players/pid/$event->wid") : '',
      $event->finished ? l(t('full results'), "plm/events/$event->eid") : '',
    );
    if (user_access('administer poker league')) {
      if ($event->finished)
        $rowdata[] = '';
      else
        $rowdata[] = l(t('edit'), "plm/events/$event->eid/edit");
    }
    $rows[] = $rowdata;
  }

  $output .= theme('table', $header, $rows);
  $output .= "</div>\n";
  return $output;
}


function plm_current_season_view() {
  $season = _get_plm_current_season();
  return plm_season_view($season);
  
}
function plm_season_view($plm_season=NULL) {
  if (!isset($plm_season)){
    $sid=variable_get('plm_current_season', 0);
    $plm_season = _get_plm_season($sid);
  }
  if (!isset($plm_season)){
    $output = '<p>No Season Selected<p>';
    return $output;
  }  

  drupal_set_title("$plm_season->title");

  $output .= theme_plm_season($plm_season);
  return $output;
}

function plm_seasons() {
  return '<p>plm_seasons()</p>' . plm_mainpage(null, null);
}


function plm_event_load($node) {
  return _get_plm_event($node);
}
function plm_event_view($event, $teaser = FALSE, $page = FALSE) {
  drupal_set_title("$event->title");
  $output = theme_plm_event_details($event);
  return $output;
}

function theme_plm_event_details($event, $season=NULL) {
  if (isset($season) && $season->sid == $event->sid) 
    $s = $season;
  else 
    $s = _get_plm_season($event->sid);

  $label = 'Season';
  $title = $s->title;
  $output .= "$label: " . l(t("@title", array('@title'=>$title)),
                           "plm/seasons/$season->sid");
  //$output .= theme_plm_event_season($s);
  $label = 'Event Date';
  $fmt = 'D, M j Y';
  $datestr = date($fmt, $event->event_date);
  $output .= "<div class=\"pl_event_date\">$label: $datestr</div>";
  //$output .= theme_plm_event_date($event);
  $label = 'Host';
  $rec = _get_plm_player($event->hid);
  $name = $rec->name;
  if (!$name) $name = 'None';
  $output .= "<div class=\"event_host\">$label: $name</div>";
  //$output .= theme_plm_event_host($event);
  if ($event->num_players){
    $label = 'Entrants';
    $num_players = $event->num_players;
    $output .= "<div class=\"num_players\">$label: $num_players</div>";
    //$output .= theme_plm_event_num_players($event);
    if (user_access('access poker league member content')) {
      $output .= "<div>Initial Pot: $event->pot_start</div>\n";
      $output .= "<div>Buy-in: \$$event->buyin</div>\n";
      $pot_total = $event->pot_start + $event->buyin * $event->num_players;
      $output .= "<div>Total Pot: \$$pot_total</div>\n";
    }
    $output .= theme_plm_event_results($event);
  }
  return $output;
}
function theme_plm_event_date($event) {
  $label = 'Event Date';
  $fmt = 'D, M j Y';
  $datestr = date($fmt, $event->event_date);
  $output .= "<div class=\"pl_event_date\">$label: $datestr</div>";
  return $output;
}
function theme_plm_event_host($event) {
  $label = 'Host';
  $rec = _get_plm_player($event->hid);
  $name = $rec->name;
  if (!$name) $name = 'None';
  $output = "<div class=\"event_host\">$label: $name</div>";
  return $output;
}
function theme_plm_event_num_players($event) {
  $label = 'Entrants';
  $num_players = $event->num_players;
  $output = "<div class=\"num_players\">$label: $num_players</div>";
  return $output;
}
function theme_plm_event_season($season) {
  $label = 'Season';
  $title = $season->title;
  $output = "$label: " . l(t("@title", array('@title'=>$title)),
                           "plm/seasons/$season->sid");
  return $output;
}

function plm_result_load($eid, $place) {
  $res = _get_plm_result($eid, $place);
  if (!$res) $res = _plm_result_new($eid, $place);
  return $res;
}
// blank event result
function _plm_result_new($event, $place) {
  $res->eid = $event->eid;
  $res->place  = $place;
  $res->points = _plm_rules_default_points($event, $place);
  $res->cash   = _plm_rules_default_payout($event, $place);
  return $res;
}

function _plm_result_row($result) {
  $row = array(
    _plm_format_place($result->place),
    l(t($result->name), 'plm/players/pid/' . $result->pid),
    $result->points,
  );
  // Hide cash stats!
  if (user_access('access poker league member content')) {
    $row[] = '$' . $result->cash;
  }
  
  return $row;
}

function theme_plm_event_results($event) {
  $eid = $event->eid;

  $results = _get_plm_results($eid);
  
  if (!$results && !user_access('administer poker league')){
    return '<p>No Results Posted</p>';
  }
  $header = array(
    'Place', 'Player', 'Points', 
  );
  // Hide cash stats!
  if (user_access('access poker league member content')) {
    $header[] = '$$$';
  }
  if (user_access('administer poker league')){
    //$header[] = 'Operation';
    $header[] = '';
    popups_add_popups();
  }

  $num_places = $event->num_players;
  //if ($num_places > 5) $num_places = 5;
  if ($event->finished) $num_places = count($results);
  // Add up total prizepool
  $total = 0;

  $expected_pot_total = $event->pot_start + $event->buyin * $event->num_players;
  // Format results in table
  for ($place=1;$place<=$num_places;$place++){
    $r = $results[$place];
    // display blank result for admin if not set
    if (!$r){
      if ($total >= $expected_pot_total) continue;
      $r = _plm_result_new($event, $place);
    }
    $row = _plm_result_row($r);
    if (user_access('administer poker league')){
      if ($event->finished) 
        $row[] = '';
      else{
        $row[] = l(t('edit'), 
                 "plm/results/$r->eid/$r->place/edit",
                 array('attributes' => array('class' => 'popups-form')));
      }
    }
    $rows[] = $row;
    $total += $r->cash;
  }
  
  $rem = $expected_pot_total - $total;

  // make sure the payouts add up,
  // but if we don't have access to cash stats, skip it
  if ($rem && user_access('access poker league member content')) {
    $pre = '$';
    if ($rem > 0) $style = 'color: #006600';
    else {
      $style = 'color: #660000';
      // $-5 looks too weird...try ($5) instead
      $pre = '($';
      $rem = -$rem;
      $post = ')';
    }
    $lastrow = array(
      array('data' => 'Pot Remaining', 'header' => 1, 'colspan' => 3),
      array('data' => $pre . $rem . $post, 'style' => $style),
    );
    if (user_access('administer poker league')){
      $lastrow[] = array('data' => '');
    }
    $rows[] = array('class' => 'subtot', 'data' => $lastrow);
  }
    
  if ($event->finished) {
    $caption = t('Final Results');
  }
  else {
    $caption = t('Tentative Results');
  }
  $output .= theme('table', $header, $rows, NULL, $caption);
  return $output;
}


function _theme_plm_table($header, $rows, $attributes = array(), $caption = NULL) {
  // Add sticky headers, if applicable.
  if (count($header)) {
    drupal_add_js('misc/tableheader.js');
    // Add 'sticky-enabled' class to the table to identify it for JS.
    // This is needed to target tables constructed by this function.
    $attributes['class'] = empty($attributes['class']) ? 'sticky-enabled' : ($attributes['class'] .' sticky-enabled');
  }

  $output = '<table'. drupal_attributes($attributes) .">\n";

  if (isset($caption)) {
    $output .= '<caption>'. $caption ."</caption>\n";
  }

  // Format the table header:
  if (count($header)) {
    $ts = plm_tablesort_init($header);
    // HTML requires that the thead tag has tr tags in it follwed by tbody
    // tags. Using ternary operator to check and see if we have any rows.
    $output .= (count($rows) ? ' <thead><tr>' : ' <tr>');
    foreach ($header as $cell) {
      $cell = plm_tablesort_header($cell, $header, $ts);
      $output .= _theme_table_cell($cell, TRUE);
    }
    // Using ternary operator to close the tags based on whether or not there are rows
    $output .= (count($rows) ? " </tr></thead>\n" : "</tr>\n");
  }
  else {
    $ts = array();
  }

  // Format the table rows:
  if (count($rows)) {
    $output .= "<tbody>\n";
    $flip = array('even' => 'odd', 'odd' => 'even');
    $class = 'even';
    foreach ($rows as $number => $row) {
      $attributes = array();

      // Check if we're dealing with a simple or complex row
      if (isset($row['data'])) {
        foreach ($row as $key => $value) {
          if ($key == 'data') {
            $cells = $value;
          }
          else {
            $attributes[$key] = $value;
          }
        }
      }
      else {
        $cells = $row;
      }
      if (count($cells)) {
        // Add odd/even class
        $class = $flip[$class];
        if (isset($attributes['class'])) {
          $attributes['class'] .= ' '. $class;
        }
        else {
          $attributes['class'] = $class;
        }

        // Build row
        $output .= ' <tr'. drupal_attributes($attributes) .'>';
        $i = 0;
        foreach ($cells as $cell) {
          $cell = plm_tablesort_cell($cell, $header, $ts, $i++);
          $output .= _theme_table_cell($cell);
        }
        $output .= " </tr>\n";
      }
    }
    $output .= "</tbody>\n";
  }

  $output .= "</table>\n";
  return $output;
}

function plm_block($op = 'list', $delta = 0, $edit = array()) {
  //drupal_set_message("plm_block op=$op delta=$delta edit=" . print_r($edit, TRUE));
  switch ($op) {
    case 'list':
      // If $op is "list", we just need to return a list of block descriptions.
      // This is used to provide a list of possible blocks to the administrator,
      // end users will not see these descriptions.
      // A block can provide default settings.
      $blocks = array(
        array(
          'info'       => t('PLM Leaderboard'),
          'cache' => BLOCK_NO_CACHE
        ),
        array(
          'info'       => t('PLM Results'),
          'cache' => BLOCK_NO_CACHE
        ),
      );
        
      return $blocks;
    case 'configure':
      // If $op is "configure", we need to provide the administrator with a
      // configuration form. The $delta parameter tells us which block is being
      // configured. In this example, we'll allow the administrator to customize
      // the text of the first block.
      $form = array();
      if ($delta == 0) {
        // All we need to provide is a text field, Drupal will take care of
        // the other block configuration options and the save button.
        //$form['block_example_string'] = array(
        //  '#type' => 'textfield',
        //  '#title' => t('Block contents'),
        //  '#size' => 60,
        //  '#description' => t('This string will appear in the example block.'),
        //  '#default_value' => variable_get('block_example_string',  t('Some example content.')),
        //);
      }
      return $form;
    case 'save':
      // If $op is "save", we need to save settings from the configuration form.
      // Since the first block is the only one that allows configuration, we
      // need to check $delta to make sure we only save it.
      //if ($delta == 0) {
      // Have Drupal save the string to the database.
      //  variable_set('block_example_string', $edit['block_example_string']);
      //}
      //return;
    case 'view': default:
      switch ($delta) {
        case 0:
          $block['subject'] = t('Leaderboard');
          $block['content'] = theme('plm_leaderboard_block');
          break;
        case 1:
          $block['subject'] = t('Latest Results');
          $block['content'] = theme('plm_results_block');
          break;
      }
      return $block;
  }
}

/**
 * Implementation of hook_theme()
 */
function plm_theme($existing, $type, $theme, $path) {
  //drupal_set_message('plm_theme');  
  return array(
    'plm_leaderboard_block' => array(
      'arguments' => array('plm_season' => NULL),
    ),
    'plm_results_block' => array(
      'arguments' => array('plm_season' => NULL, 'plm_event' => NULL),
    ),
    'plm_nav_menu' => array(
      'arguments' => array('tree' => NULL),
    )
  );
}

function theme_plm_leaderboard_block($plm_season=NULL) {
  //drupal_set_message('theme_plm_leaderboard_block');
  if ( !isset($plm_season) ) {
    $plm_season = plm_season_load(variable_get('plm_current_season', 0));
  }
  if ( !isset($plm_season) ) {
    return '<p>No Current Season!</p>';
  }
  $header = array(
    array('data' => t('Rank')),
    array('data' => t('Name')),
    array('data' => t('Points')),
    //array('data' => t('Winnings')),
    //array('data' => t('Places')),
  );

  $players = _get_plm_rankings($plm_season->sid, 10);
  if (!$players) {
    $output .= '<p>No Results Found</p>';
    return $output;
  }
  $rank = 1;
  foreach ($players as $rec) {
    $rowdata = array(
      $rank,      
      l(t($rec->name), 'plm/players/pid/' . $rec->pid),
      $rec->points,
      //$rec->cash ? '$' . $rec->cash : '',
      //$rec->places ? $rec->places : '',
    );
    $rank++;
    $rows[] = $rowdata;
  }
  //$caption = $plm_season->title;
  $attr = array('class' => 'compact-table');
  $output .= theme('table', $header, $rows, $attr, $caption);
  $output .= l(t('More...'), "plm/seasons/$plm_season->sid/rankings");
  return $output;
}

function theme_plm_results_block($plm_season=NULL, $event=NULL) {
  if (!isset($event)) {
    if (!isset($plm_season)) 
      //$plm_season = _get_plm_season(variable_get('plm_current_season', 0));
      $sid = variable_get('plm_current_season', 0);
    else 
      $sid = $plm_season;
    if (!$sid) return '';
    $event = _get_latest_plm_event($sid);
    if (!isset($event)) return '';
  }
  $results = _get_plm_results($event->eid);
  if (!isset($results)) return '';

  $output = "<div class=\"plm-event-info\">";
  
  $fmt = 'D, M j Y';
  $datestr = format_date($event->event_date, 'custom', $fmt);

  $output .= '<div><h3>' . l($event->title, "plm/events/$event->eid") . '</h3></div>';
  $output .= "<div>$datestr</div>";
  $output .= "<div>Host: " . l($event->host, 'plm/players/pid/' . $event->hid) . "</div>";
  $output .= "<div>$event->num_players Players</div>";
  $output .= "</div>";
  
  foreach ($results as $r) {
    $rowdata = array( 
      _plm_format_place($r->place),
      l($r->name, 'plm/players/pid/' . $r->pid)
    );
    if (user_access('access poker league member content')) {
      $rowdata[] = '$' . $r->cash;
    }
    $rows[] = $rowdata;
  }
  $attr = array('class' => 'compact-table');
  $output .= theme("table", NULL, $rows, $attr);
  return $output;
}

function theme_plm_nav_menu() {

}